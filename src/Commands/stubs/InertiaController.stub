<?php

namespace {{ namespace }};

use {{ rootNamespace }}\Models\{{ model }};
use {{ rootNamespace }}\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Inertia\Inertia;

class {{ controllerClass }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Inertia\Response
     */
    public function index(): \Inertia\Response
    {
        return Inertia::render('{{ models }}/Index', [
                '{{ entities }}' => {{ model }}::paginate(10),
            ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Inertia\Response
     */
    public function create(): \Inertia\Response
    {
        return Inertia::render('{{ models }}/Create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  Request  $request
     * @return Redirect
     */
    public function store(Request $request): Redirect
    {
        return Redirect::route('{{ entities }}')->with('success', '{{ model }} created.');
    }

    /**
     * Display the specified resource.
     *
     * @param {{ model }} ${{ entity }}
     * @return \Inertia\Response
     */
    public function show({{ model }} ${{ entity }}): \Inertia\Response
    {
        return Inertia::render('{{ models }}/Show', [
                '{{ entity }}' => ${{ entity }}
            ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param {{ model }} ${{ entity }}
     * @return \Inertia\Response
     */
    public function edit({{ model }} ${{ entity }}): \Inertia\Response
    {
        return Inertia::render('{{ models }}/Edit', [
                '{{ entity }}' => ${{ entity }}
            ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param Request $request
     * @param {{ model }} ${{ entity }}
     * @return Redirect
     */
    public function update(Request $request, {{ model }} ${{ entity }}): Redirect
    {
        return Redirect::back()->with('success', '{{ model }} updated.');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param {{ model }} ${{ entity }}
     * @return Redirect
     */
    public function destroy({{ model }} ${{ entity }}): Redirect
    {
        return Redirect::back()->with('success', '{{ model }} restored.');
    }

    /**
     * Restore the specified resource.
     *
     * @param {{ model }} ${{ entity }}
     * @return Redirect
     */
    public function restore({{ model }} ${{ entity }}): Redirect
    {
        ${{ entity }}->restore();

        return Redirect::back()->with('success', '{{ model }} restored.');
    }
}
